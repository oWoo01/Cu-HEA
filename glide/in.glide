units		metal
boundary	p p p
atom_style	atomic
timestep	0.004

variable	a equal 1		# the index for compositions
variable	T equal 300		# temperature
variable	tt equal 300	# shear stress (unit: MPa)
variable	tau equal ${tt}*10	# change the unit from MPa to bar

read_data	data/data.${a}_$TK	# data file after minimization and relaxation

pair_style	eam/alloy
pair_coeff	* * ../p_func/FeNiCrCoCu-heafixed.setfl Fe Ni Cr Co Cu

mass		1 55.847 # Fe
mass		2 58.693 # Ni
mass		3 51.960 # Cr
mass		4 58.933 # Co
mass		5 63.546 # Cu

variable	yh equal yhi-10.0	# the top boundary of atoms
variable	yl equal ylo+10.0	# the bottom boundary of atoms
variable	h equal 5.0  # thickness of the boundary atom layer
variable	xhalf equal (xhi+xlo)/2
variable	zhalf equal (zhi+zlo)/2
variable	y1 equal ${yh}-${h}
variable	y2 equal ${yl}+${h}

# ------------boundary layer-------------
region		top plane ${xhalf} ${y1} ${zhalf} 0 1 0 units box
region		bot plane ${xhalf} ${y2} ${zhalf} 0 -1 0 units box
group		top region top
group		bot region bot
group		surface union top bot
group		mobile subtract all surface

# -----------record the position of disl-------
compute		cna mobile cna/atom 3
variable	hcp atom c_cna==2  
group		atoms dynamic mobile var hcp every 50
compute		xx atoms property/atom x
compute		cx atoms com

# calculate the disl position when crossing the box boundary
variable	shift equal 0		
variable	atoms1 atom c_xx>xcm(mobile,x)
variable	atoms2 atom (c_xx<xcm(mobile,x))&&(c_xx!=0)
group		atoms1 dynamic mobile var atoms1 every 50
group		atoms2 dynamic mobile var atoms2 every 50
variable	n1 equal count(atoms1)
variable	n2 equal count(atoms2)
compute		x1 atoms1 reduce sum c_xx
compute		x2 atoms2 reduce sum c_xx 
variable	dislx1 equal (c_x1+(v_shift-1)*lx*v_n1)/(v_n1+v_n2)
variable	dislx2 equal (c_x2+v_shift*lx*v_n2)/(v_n1+v_n2)

variable	dislx_0 equal c_cx[1]+v_shift*lx 
variable	dislx_1 equal v_dislx1+v_dislx2

# ------------force on each atom--------------
variable	ntop equal count(top)  # number of atoms in top
variable	tmp2 equal lx
variable	tmp3 equal lz
variable	tmp4 equal v_tmp2*v_tmp3/v_ntop*v_tau/v_energyconv
variable	ftop equal ${tmp4}	# force on each atom in top layer

variable	nbot equal count(bot)
variable	tmp5 equal v_tmp2*v_tmp3/v_nbot*v_tau/v_energyconv
variable	fbot equal -${tmp5}		# force on each atom in bot layer

compute		myTemp mobile temp		# reset the temperature

#-----------initialize system------------
velocity	top set 0.0 0.0 0.0 units box
velocity	bot set 0.0 0.0 0.0 units box

fix		1 top setforce NULL 0.0 NULL
fix		2 bot setforce NULL 0.0 NULL
fix		3 top aveforce ${ftop} 0.0 0.0
fix		4 bot aveforce ${fbot} 0.0 0.0
fix		5 top nve
fix		6 bot nve
fix		7 mobile npt temp $T $T $(100*dt) aniso 1.0 1.0 $(1000*dt) 
fix_modify	7 temp myTemp

# detect if the stacking fault reaches the box boundary
variable	flag equal 0
variable	dislx equal 0000
variable	boundsf equal bound(atoms,xmax)
variable	boundmb equal bound(mobile,xmax)
variable	delta equal abs(v_boundsf-v_boundmb)

# ------------run-------------
thermo		50
thermo_style	custom step dt time etotal c_myTemp press pxx pyy pzz pxy pyz pxz v_dislx 
 
run		50000 every 50 &
		"variable steps equal step" &
		"if '${delta} > 1.5' &
			then &
			'variable dislx equal ${dislx_0}' &
			'variable flag equal 0' &
		 elif '${flag}==0' & 
				     'variable shift equal ${shift}+1' &
				     'variable flag equal 1' &
				       'variable dislx equal ${dislx_1}' &
		 else &
			'variable dislx equal ${dislx_1}'" &
		"print ${dislx}" &
		"print ${dislx} append txt/dislx_$a_$TK_${tt}MPa.txt screen no" 


